class Phone:
    def __init__(self, name, brand, price):
        self.name = name
        self.brand = brand
        self.price = price

    def display_phone(self):
        return f"Name: {self.name}\nBrand: {self.brand}\nPrice: {self.price}"

    def modify_phone(self, name, brand, price):
        self.name = name
        self.brand = brand
        self.price = price

    def __str__(self):
        return f"{self.name} ({self.brand}) - ${self.price:.2f}"


def main_menu():
    print("1. Create a new phone")
    print("2. Modify a phone")
    print("3. Delete a phone")
    print("4. Display all phones")
    print("5. Exit")
    choice = input("Enter your choice: ")
    return int(choice)


def create_phone():
    name = input("Enter the phone name: ")
    brand = input("Enter the phone brand: ")
    price = float(input("Enter the phone price: "))
    return Phone(name, brand, price)


def modify_phone(phone_list):
    name = input("Enter the phone name to modify: ")
    for phone in phone_list:
        if phone.name == name:
            phone.modify_phone(input("Enter the new phone name: "), input("Enter the new phone brand: "), float(input("Enter the new phone price: ")))
            return
    print("Phone not found.")


def delete_phone(phone_list):
    name = input("Enter the phone name to delete: ")
    for phone in phone_list:
        if phone.name == name:
            phone_list.remove(phone)
            return
    print("Phone not found.")


def display_phones(phone_list):
    for phone in phone_list:
        print(phone)


def main():
    phones = []
    while True:
        choice = main_menu()
        if choice == 1:
            phones.append(create_phone())
        elif choice == 2:
            modify_phone(phones)
        elif choice == 3:
            delete_phone(phones)
        elif choice == 4:
            display_phones(phones)
        elif choice == 5:
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
